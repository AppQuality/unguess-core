openapi: 3.1.0
x-stoplight:
  id: b8clt14el6lki
info:
  title: UNGUESS CORE
  description: Unguess core api
  contact:
    email: it@unguess.io
    name: Unguess
    url: 'https://unguess.io'
  version: '1.0'
  license:
    name: license
    url: 'https://unguess.io'
tags:
  - name: Quests
    description: The unit of work for the testers
  - name: Services
    description: The item bought from the customer
  - name: Templates
    description: A simple configuration used as a starting point
servers:
  - url: 'http://localhost:3000'
paths:
  /:
    get:
      summary: Get API description
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value: {}
      operationId: get-root
      description: Get all routes available for this apis
    parameters: []
  /quests:
    get:
      summary: Get All Quests
      tags:
        - Quests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quest'
      operationId: get-quests
      description: 'Get all the quest available, regardless of the access conditions'
      security:
        - Key: []
  /services:
    get:
      summary: Get All Services
      tags:
        - Services
      responses:
        '200':
          description: OK
      operationId: get-services
      description: Get the services currently instantiated
      security:
        - Key: []
    post:
      summary: Instantiate a new service
      operationId: post-services
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  quests:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: string
                        - $ref: '#/components/schemas/Quest'
      description: Create a new service from a template
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                templateId:
                  type: number
              required:
                - name
                - templateId
      security:
        - Key: []
  '/services/{id}/quests':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The id of the service
    get:
      summary: Get the quests of a service
      tags:
        - Services
        - Quests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                      required:
                        - id
                    - $ref: '#/components/schemas/Quest'
        '400':
          $ref: '#/components/responses/NotFound'
        '403':
          description: Forbidden
      operationId: get-services-id-quests
      description: Get the quest of an instance of service
    post:
      summary: Create a new quest in a service
      operationId: post-services-id-quests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                  - $ref: '#/components/schemas/Quest'
      description: Add a new quest to the instance of a service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quest'
  '/quests/{questId}':
    parameters:
      - $ref: '#/components/parameters/questId'
    get:
      summary: Get Quests details
      operationId: get-quests-questId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Quest'
                  - type: object
                    properties:
                      service:
                        type: number
              examples:
                single-step-quest:
                  value:
                    steps:
                      id: 0
                      description: string
                      type: media
                    access:
                      - id: string
                        endDate: string
                        type: timed
                    results:
                      - step: 1
                        item:
                          path: string
                          comments:
                            - timestamp: string
                              title: string
                              description: string
                        approved: true
                    service: 0
                multi-step-quest:
                  value:
                    steps:
                      - id: 0
                        description: example step 1 string
                        type: media
                      - id: 0
                        description: example step 2 string
                        type: media
                    access:
                      - id: string
                        endDate: string
                        type: timed
                    results:
                      - step: 0
                        item:
                          path: string
                          comments:
                            - timestamp: string
                              title: string
                              description: string
                        approved: true
                    service: 0
      security:
        - Key: []
      x-internal: false
      parameters: []
      tags:
        - Quests
      description: Retrieve the quest details
  '/quests/{questId}/results':
    parameters:
      - $ref: '#/components/parameters/questId'
    get:
      summary: Get Quests results
      tags:
        - Quests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        step:
                          allOf:
                            - type: object
                              properties:
                                id:
                                  type: number
                              required:
                                - id
                            - $ref: ./Steps/Steps.yaml#/components/schemas/StepType
                        author:
                          $ref: '#/components/schemas/Author'
                      required:
                        - step
                    - $ref: ./Results/Results.yaml#/components/schemas/Result
              examples:
                example-1:
                  value:
                    - step:
                        id: 0
                        type: bug
                      author:
                        id: string
                        source: tryber
                      item:
                        path: string
                        comments:
                          - timestamp: string
                            title: string
                            description: string
                      approved: true
      operationId: get-quests-questId-results
      security:
        - Key: []
      description: Get the list of results of every step of the quest
  '/steps/{stepId}':
    parameters:
      - $ref: '#/components/parameters/stepId'
    post:
      summary: Push a new results to a quest
      operationId: post-steps-stepId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      description: 'Allow an user to link something (a video, a bug, a survey result...) to a quest'
      security:
        - Key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  $ref: '#/components/schemas/Author'
                result:
                  $ref: ./Results/Results.yaml#/components/schemas/Result
              required:
                - result
      tags:
        - Services
        - Quests
    get:
      summary: Get steps details and results
      operationId: get-steps-stepId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ./Steps/Steps.yaml#/components/schemas/Step
                  - type: object
                    properties:
                      quest:
                        type: number
                      service:
                        type: number
              examples:
                example-1:
                  value:
                    id: 0
                    description: string
                    type: media
                    results:
                      - item:
                          path: string
                          comments:
                            - timestamp: string
                              title: string
                              description: string
                        approved: true
                    quest: 0
                    service: 0
      security:
        - Key: []
      x-internal: false
      description: Retrieve details of the step and optional details
  /serviceTemplates:
    get:
      summary: Get All Templates
      tags:
        - Templates
      operationId: get-serviceTemplates
      description: Get all Service templates
      security:
        - Key: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
components:
  schemas:
    Quest:
      title: Quest
      x-stoplight:
        id: 3nebbmk50z3k6
      type: object
      properties:
        steps:
          oneOf:
            - $ref: ./Steps/Steps.yaml#/components/schemas/Step
            - type: array
              items:
                $ref: ./Steps/Steps.yaml#/components/schemas/Step
        access:
          type: array
          items:
            $ref: ./AccessConditions/AccessConditions.yaml#/components/schemas/AccessCondition
        name:
          type: string
        startDate:
          type: string
          format: date
    Author:
      title: Author
      x-stoplight:
        id: 4xbbnpcg2a60y
      type: object
      properties:
        id:
          type: string
        source:
          type: string
          enum:
            - tryber
      required:
        - id
        - source
  securitySchemes:
    Key:
      name: API Key
      type: apiKey
      in: header
  parameters:
    stepId:
      name: stepId
      in: path
      required: true
      schema:
        type: string
      description: The id of the step
    questId:
      name: questId
      in: path
      required: true
      schema:
        type: string
      description: The id of the quest
  responses:
    NotFound:
      description: An error due to the resource not existing
      content:
        application/json:
          schema:
            type: object
            properties:
              element:
                type: string
              id:
                type: integer
              message:
                type: string
            required:
              - element
              - id
              - message
          examples:
            example-1:
              value:
                element: campaign
                id: 1
                message: No campaign with id 1
    NotAuthorized:
      description: An error due to insufficient authorization to access the resource
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            example:
              value:
                message: Not Authorized.
