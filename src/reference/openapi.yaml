openapi: 3.1.0
x-stoplight:
  id: b8clt14el6lki
info:
  title: UNGUESS CORE
  description: Unguess core api
  contact:
    email: it@unguess.io
    name: Unguess
    url: 'https://unguess.io'
  version: '1.0'
  license:
    name: license
    url: 'https://unguess.io'
tags:
  - name: Quests
    description: The unit of work for the testers
  - name: Services
    description: The item bought from the customer
  - name: Templates
    description: A simple configuration used as a starting point
servers:
  - url: 'http://localhost:3000'
paths:
  /quests:
    get:
      summary: Get All Quests
      tags:
        - Quests
      responses:
        '200':
          description: OK
      operationId: get-quests
      description: 'Get all the quest available, regardless of the access conditions'
      security:
        - Key: []
  /services:
    get:
      summary: Get All Services
      tags:
        - Services
      responses:
        '200':
          description: OK
      operationId: get-services
      description: Get the services currently instantiated
      security:
        - Key: []
    post:
      summary: Instantiate a new service
      operationId: post-services
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  quests:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: string
                        - $ref: '#/components/schemas/Quest'
      description: Create a new service from a template
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                templateId:
                  type: number
              required:
                - name
                - templateId
      security:
        - Key: []
  '/services/{id}/quests':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The id of the service
    get:
      summary: Get the quests of a service
      tags:
        - Services
        - Quests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                      required:
                        - id
                    - $ref: '#/components/schemas/Quest'
      operationId: get-services-id-quests
      description: Get the quest of an instance of service
    post:
      summary: Create a new quest in a service
      operationId: post-services-id-quests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                  - $ref: '#/components/schemas/Quest'
      description: Add a new quest to the instance of a service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quest'
  '/services/{serviceId}/quests/{questId}':
    parameters:
      - schema:
          type: string
        name: serviceId
        in: path
        required: true
        description: The id of the service
      - schema:
          type: string
        name: questId
        in: path
        required: true
        description: The id of the quest
    post:
      summary: Push a new results to a quest
      operationId: post-services-serviceId-quests-questId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      description: 'Allow an user to link something (a video, a bug, a survey result...) to a quest'
      security:
        - Key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  $ref: '#/components/schemas/Author'
                result:
                  $ref: ./Results/Results.yaml#/components/schemas/Result
      tags:
        - Services
        - Quests
  /serviceTemplates:
    get:
      summary: Get All Templates
      tags:
        - Templates
      operationId: get-serviceTemplates
      description: Get all Service templates
      security:
        - Key: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
components:
  schemas:
    Quest:
      title: Quest
      x-stoplight:
        id: 3nebbmk50z3k6
      type: object
      properties:
        steps:
          oneOf:
            - $ref: ./Steps/Steps.yaml#/components/schemas/Step
            - type: array
              items:
                $ref: ./Steps/Steps.yaml#/components/schemas/Step
        access:
          type: array
          items:
            $ref: ./AccessConditions/AccessConditions.yaml#/components/schemas/AccessCondition
    Author:
      title: Author
      x-stoplight:
        id: 4xbbnpcg2a60y
      type: object
      properties:
        id:
          type: string
  securitySchemes:
    Key:
      name: API Key
      type: apiKey
      in: header
